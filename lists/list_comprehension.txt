We can use a feature in python to build lists in a very quick way. The feature is called as list comprehensions.
Lets walk over some quick examples:

Example 1: Trying to get the square of the numbers and storing in a list.

In [1]: for i in range(1,11):
   ...:     print i*i
   ...:     
1
4
9
16
25
36
49
64
81
100

In [2]: [i*i for i in range(1,11)]
Out[2]: [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]

Example 2: How to save the string in a list using comprehensions. 

In [3]: string="today is a great day"

In [5]: [i for i in string.split()]
Out[5]: ['today', 'is', 'a', 'great', 'day']

n [7]: [[i.upper(),i.capitalize()] for i in string.split()]
Out[7]: 
[['TODAY', 'Today'],
 ['IS', 'Is'],
 ['A', 'A'],
 ['GREAT', 'Great'],
 ['DAY', 'Day']]

Example 3:Use a list comprehension to square each odd number in a list. The list is input by a sequence of comma-separated numbers.
Suppose the following input is supplied to the program:
1,2,3,4,5,6,7,8,9
Then, the output should be:
1,3,5,7,9


In [1]: values = raw_input()
1,2,3,4,5,6,7,8,9,10

In [2]: numbers = [x for x in values.split(",") if int(x)%2!=0]

In [3]: numbers
Out[3]: ['1', '3', '5', '7', '9']

In [4]: print ",".join(numbers)
1,3,5,7,9



References:
http://www.secnetix.de/olli/Python/list_comprehensions.hawk
https://docs.python.org/2/tutorial/datastructures.html#list-comprehensions
http://www.python-course.eu/list_comprehension.php
